//question

Given a non-negative number represented as an array of digits,

add 1 to the number ( increment the number represented by the digits ).

The digits are stored such that the most significant digit is at the head of the list.

Example:

If the vector has [1, 2, 3]

the returned vector should be [1, 2, 4]

as 123 + 1 = 124.


//solution

vector<int> Solution::plusOne(vector<int> &A) {
    
    int n = A.size();
    auto it = A.begin();
    while(*it==0 && A.size()>1)  ///termininating leading zeroes
    {
        A.erase(it);
    }
    int carry = 0;
    for(int i=A.size()-1;i>=0;i--) //traversing from last index
    {
        if(A[i]==9)
        {
            A[i]=0;
            carry = 1; //carrying carry if last element in vector is 9 suppose adding 9 to 1 it becomes 10 
            continue;
        }
        if(carry==1) //checking the carry
        {
            A[i]++;
            carry=0;
            break;
        }
        A[i]++;
        break;
    }
    if(carry==1)
    {
        A.insert(A.begin(),1);  //for example given [9,9] it gives output [1,0,0] 
    }
    return A;
}
